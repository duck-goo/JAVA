JAVA - 프로그래밍 언어
	프로그래밍 언어는 개발자와 컴퓨터가 소통하기 위한 언어이다.

JAVA의 역사
	자바(Java)는 썬 마이크로시스템즈의 제임스 고슬링(James Gosling)과 다른 연구원들이 개발한 객체 지향적 프로그래밍 언어이다.
	사무실 밖에 있던 오크 나무를 따다 오크(Oak), 혹은 그린(Green) 이라고도 불렀으나, 
	단어 리스트 중 무작위로 뽑은 자바(Java)를 선택했다.

	자바라는 이름은 개발자 '제임스 고슬링'이 자바 커피의 완전한 매니아로서 하루에도 10여
	잔씩 이상을 마시는 자바 커피 예찬론자이기 때문입니다. 명칭도 유명한 커피 재배지인
	인도네시아 섬인 자바에서 따왔다고 합니다.

소스코드
	명령어를 작성해 놓은 것.
	개발자와 컴퓨터가 소통할 것을 글로 작성해 놓은 것.

소스파일
	소스코드가 작성되어 있는 파일.

컴파일
	사람의 언어를 컴퓨터 언어로 바꿔주는 작업.

컴파일러
	컴파일을 해주는 프로그램 또는 명령어.

콘솔
	개발자와 컴퓨터가 소통한 결과를 보여주는 창.

프로그램
	소스코드로 잘 짜인 틀.

일반 프로그램
	프로그램
	OS(운영체제) : 하드웨어에 적절한 전기 신호를 흘려주는 역할
	하드웨어

JAVA 프로그램
	프로그램
	JVM(Machine) : JAVA 프로그램을 OS에 맞게 번역한다.
	OS(운영체제)
	하드웨어

--------------------------------------------------------------------------------
JVM(Java Virtual Machine)
	- JAVA 프로그램을 실행시켜주고, OS에 맞게 번역해주는 운영체제이다.
JRE(Java Runtime Enviroment)
	- JVM을 생성하며, 실행할 때 필요한 라이브러리를 가지고 있는 파일
JDK(Java Developement Kit)
	- JRE 외의 개발에 필요한 도구를 가지고 있는 키트
	- 컴파일 명령어와 실행 명령어를 담고 있다.

-----------------------------------------------------------------------
기본 구조
	프로젝트
		패키지
			클래스(앞글자 대문자)
				메소드
					소스코드

단축키 Alt + Shift + N
> 아래 방향키
> 엔터
> print 작성 후 엔터
> 프로젝트 클릭
> 엔터
> 아래 방향키 두번 눌러서 src 선택
> Ctrl + n
> 패키지 생성
> 패키지 선택
> Ctrl + n 클래스 선택
> Alt + k 패키지 선택
> 패키지 이름을 작성
> Alt + n(클래스 이름으로 커서 이동)
> 클래스 이름 작성하고 엔터

출력 메소드
	print() : 마지막에 자동으로 줄바꿈이 되지 않고 아래의 문장과 이어서 출력된다.
	println() : 마지막에 자동으로 줄바꿈된다.
	printf()

출력 메소드의 목적
	- 전달받은 데이터 및 전달할 데이터 검사, 오류 발생 지점 구체화 및 검사

제어 문자
	- 반드시 따옴표 안에서 작성한다
	\n : new line, 개행 문자, 줄바꿈(이것만 거의 자주 사용함)
	\t : tab, 위 아래 줄 간격 맞춰 띄기
	\" : " 표현
	\' : ' 표현
	\\ : \ 표현

자료형(type, 종류)
	자료형	type	byte	값
	
	정수형	int	4	10, 32, 543, -32, 2147483647, ... (기본형)
		long 	8 	..., -9,223,372,036,854,775,808 ~ 9,223,372,036,854,775,807
	실수형	float	4	10.5F, -0.9F, 0.0F, 123.45645F, ...
		double	8	10.5, -0.9, 0.0, 123.45645, ...
				- 실수, 가수가 따로따로 저장되므로 두번 옮기지 않기위해서 double이 기본형
	논리형	boolean 1 	true, false // 1byte
	문자형	char	2	'김', 'A', '0', '.', ...
	문자열	String	?	"김세환", "ABC", "A", "0", ...

변수의 선언
	type name = value;
	자료형 변수명 = 초기값;
	자료형 변수명;

	예)	
	int x = 10;
	x라는 이름의 저장공간이 RAM에 할당(allocation)되고 10이라는 값이 들어간다.

주소(해시코드)
	만약 int x = 10; 이라면
	x라는 이름의 저장공간이 RAM에 할당될 때 고유한 값인 주소값이 부여된다.
	JVM이 관리하는 주소값을 해시코드라고 한다.

변수 선언 시 주의사항
	1. 같은 이름의 변수로 선언할 수 없다.
	2. 초기화를 해준다.
	3. 되도록 선언부에 한꺼번에 선언한다(영역 상단).

	ex) 
		2 int x = 10;
		3 int y = 20;
		...
		1234 System.out.println(x);
		...
		7896
		...
		10586 System.out.println(y);
		
변수명 주의사항
	문자로 시작해야 한다.
	특수문자는 사용할 수 없다. 단, _는 허용한다.
	소문자로 시작한다.
	공백을 사용할 수 없다.
	되도록 한글은 사용하지 않는다.
	명사로 사용한다.
	뜻이 있는 단어를 사용한다.

	a, b, c, d, e, ... (X)
	data, number, age, name, ... (O)
	
	*자바는 카멜표기법
	happyDay(카멜 표기법), happy_day(언더파 표기법)

변수를 사용하는 이유
	1. 반복되는 값을 쉽게 관리할 수 있다.
	2. 의미 없는 값을 하나의 정보로 만들기 위해서 사용한다(자료구조).

서식 문자(format)
	반드시 따옴표("") 안에서 작성한다.
	
	%d : decimal(10진수 정수)
	%o : octal(8진수 정수)
	%x : hexadecimal(16진수 정수)
	%f : float(실수)
	%c : character(문자)
	%s : string(문자열)

상수란?
	- 항상 그대로인 수, 값을 변경할 수 없도록 하는 것이 목적이다.

상수의 선언
	- final type NAME = value;

상수를 사용하는 이유
	- 의미 없는 값에 의미를 부여하기 위한 목적
	- 오타를 방지하기 위한 목적

문자형의 형변환(char)
	- 0과 1로 값이 저장될 때 정수로 표현되며 아스키코드로 나타낸다.

문자열의 형변환(String)
	1) 다른 자료형을 문자열로
	2) 문자열을 다른 자료형으로















